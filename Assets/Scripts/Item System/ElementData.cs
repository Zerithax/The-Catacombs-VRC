using Catacombs.Base;
using Catacombs.ElementSystem.Runtime;
using UdonSharp;
using UnityEngine;

namespace Argus.ItemSystem.Editor
{
    //This script is a clone of the ElementType SO, to be attached to SO prefabs generated by the Editor button in ElementTypeManager
    public class ElementData : UdonSharpBehaviour
    {
        [Header("Element")]
        public ElementTypes elementTypeId;
        public Color elementColor;

        [Header("Despawn Settings")]
        public bool canDespawn;
        public int despawnTime;
        public float killVelocity;

        [Header("Base Element Settings")]
        public GameObject BaseElementCollisionPrefab;
        public Mesh baseElementMesh;
        public float pickupColliderRadius;
        public float rbMass;
        public float rbDrag;
        public float rbAngularDrag;

        [Header("Precipitate Settings")]
        public bool canCreatePrecipitate;
        public ElementPrecipitates elementPrecipitateType;
        public float shrinkSpeed;
        public int elementPrecipitateAmount;
        public float minimumVelocity;
        public float maximumVelocity;
        public float velocityMultiplier;

        [Header("Seed Pod Settings")]
        public bool canSpawnSeedPod;
        public float seedPodSpawnChance;
        public GameObject SeedPodPrefab;
        public Vector3 seedPodPosOffset;
        public GameObject ElementLeavesPrefab;
        public ElementTypes seedPodElementType;

        [Header("Element Spawner Settings")]
        public RuntimeAnimatorController ElementSpawnerAnimator;
        public float colliderYPos;
        public float colliderRadius;
        public float colliderHeight;
        public GameObject[] ElementSpawnerGrowthPrefabs;
        public GameObject ElementSpawnTransforms;
        public int elementSpawnerGrowTime;
        public int elementSpawnTime;
        public bool canPlantManually;

        [Header("Effect Settings")]
        public bool elementHasUsableEffect;
        public ElementPrimingTrigger elementEffectPrimingTrigger;
        public int effectPrimingThreshold;
        public ElementUseTrigger effectUseTrigger;
        public PlayerEffect ingestedEffect;
        public int ingestedEffectStrength;
        public float ingestedEffectDuration;
        public GameObject GrownObjectPrefab;
    }
}